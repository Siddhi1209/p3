You can achieve this by modifying smart_krish.php to dynamically check legend.php, which will read the task_status.txt file from the specified path.

Steps to Implement:
legend.php will check task_status.txt

If the file contains "start", it will send a response to show the maintenance popup.

If it contains "stop" or doesn't exist, the popup will not appear.

smart_krish.php will use JavaScript

It will fetch data from legend.php and display a popup without a close button when maintenance mode is active.

It will continuously check every few seconds to hide the popup when task_status.txt changes to "stop".

1. Modify legend.php
This PHP script reads task_status.txt from the given path and returns a JSON response.

php
Copy
Edit
<?php
$filePath = "/opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/task_status.txt";

if (file_exists($filePath)) {
    $status = trim(file_get_contents($filePath));

    if ($status === "start") {
        echo json_encode([
            "status" => "show",
            "message" => "The portal is under maintenance. Please try again later."
        ]);
    } else {
        echo json_encode(["status" => "hide"]);
    }
} else {
    echo json_encode(["status" => "hide"]);
}
?>
2. Modify smart_krish.php
This file will check legend.php regularly and show/hide the popup accordingly.

php
Copy
Edit
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Smart Krish Portal</title>
    <script>
        function checkMaintenance() {
            fetch('legend.php')
            .then(response => response.json())
            .then(data => {
                let popup = document.getElementById("maintenance-popup");

                if (data.status === "show") {
                    if (!popup) {
                        showPopup(data.message);
                    }
                } else {
                    if (popup) {
                        popup.remove();
                    }
                }
            })
            .catch(error => console.error('Error fetching maintenance status:', error));
        }

        function showPopup(message) {
            let popup = document.createElement("div");
            popup.id = "maintenance-popup";
            popup.style.position = "fixed";
            popup.style.top = "0";
            popup.style.left = "0";
            popup.style.width = "100%";
            popup.style.height = "100%";
            popup.style.background = "rgba(0, 0, 0, 0.8)";
            popup.style.display = "flex";
            popup.style.justifyContent = "center";
            popup.style.alignItems = "center";
            popup.style.color = "white";
            popup.style.fontSize = "20px";
            popup.style.textAlign = "center";
            popup.innerHTML = `<div style="background: #333; padding: 20px; border-radius: 10px; padding: 20px;">${message}</div>`;
            document.body.appendChild(popup);
        }

        // Run checkMaintenance every 5 seconds
        setInterval(checkMaintenance, 5000);
        window.onload = checkMaintenance;
    </script>
</head>
<body>
    <h1>Welcome to Smart Krish Portal</h1>
</body>
</html>
How It Works
âœ… legend.php checks task_status.txt in /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/.
âœ… If it contains "start", legend.php tells smart_krish.php to show the popup.
âœ… If "stop" is found (or the file is missing), the popup disappears.
âœ… No close button is provided, preventing users from dismissing the popup.
âœ… Auto-refresh every 5 seconds, ensuring real-time updates.

How to Activate/Deactivate Maintenance Mode
To enable the popup (start maintenance mode):

bash
Copy
Edit
echo "start" > /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/task_status.txt
To disable the popup (stop maintenance mode):

bash
Copy
Edit
echo "stop" > /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/task_status.txt
This ensures the portal can dynamically enter and exit maintenance mode.

ðŸš€ Let me know if you need further modifications!













Reason

ChatGPT can
