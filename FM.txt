
function status_queue() {
    // path to the data file (same variable you already use)
    $filePath = $this->currpath . "status_queue_8app.txt." . $this->datecrr;

    // safely read file lines (ignore empty ones)
    $rawLines = @file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);

    if (!$rawLines || !is_array($rawLines) || count($rawLines) === 0) {
        echo "<tr><td colspan='16' class='text-center'>No data (file missing or empty)</td></tr>";
        return;
    }

    // Prepare lines: remove BOM, trim, replace NQKE -> -1
    $data1 = [];
    foreach ($rawLines as $line) {
        // remove UTF-8 BOM if present
        $line = preg_replace('/^\xEF\xBB\xBF/', '', $line);

        // normalize and trim
        $line = trim($line);

        // skip empty lines (already handled by FILE_SKIP_EMPTY_LINES, but safe-guard)
        if ($line === '') continue;

        // keep all queues (no VV3Q exclusion)
        $line = str_replace('NQKE', '-1', $line);
        $data1[] = $line;
    }

    // preserve existing behavior: if helper says blank, return
    if (method_exists('parent', 'checkblank') && parent::checkblank($data1)) return;

    // allow throwRed to apply any markup/transforms as before
    $data = $this->throwRed($data1, ',');

    foreach ($data as $row) {
        if ($row === '') continue;
        $cells = explode(',', $row);
        echo "<tr>";

        foreach ($cells as $k2 => $v2) {
            $v2t  = trim((string)$v2);
            $plain = trim(html_entity_decode(strip_tags($v2t)));
            $v2n   = preg_match('/^-?\d+$/', $plain) ? (int)$plain : null;

            // first column: queue name with popup link (same as before)
            if ($k2 === 0) {
                $link = "window.open('queuereplica.php?queue=" . urlencode($plain) .
                        "&&date=" . $this->datecrr .
                        "','','height=800,width=1400,scrollbars=yes,resizable=yes');";
                echo "<th><a onclick=\"$link\">" . htmlspecialchars($plain, ENT_QUOTES) . "</a></th>";
                continue;
            }

            // NQKE or -1 -> thumbs down
            if ($plain === 'NQKE' || $v2n === -1) {
                echo "<td><i class='fa fa-thumbs-down' style='color:red'></i></td>";
                continue;
            }

            // 1..98 -> show 0
            if ($v2n !== null && $v2n >= 1 && $v2n < 99) {
                echo "<td title='" . htmlspecialchars($plain, ENT_QUOTES) . "'>0</td>";
                continue;
            }

            // 99..499 -> yellow
            if ($v2n !== null && $v2n >= 99 && $v2n < 500) {
                echo "<td class='bg-yellow text-center'>" . htmlspecialchars($plain, ENT_QUOTES) . "</td>";
                continue;
            }

            // >= 500 -> red
            if ($v2n !== null && $v2n >= 500) {
                echo "<td class='bg-red-active'>" . htmlspecialchars($plain, ENT_QUOTES) . "</td>";
                continue;
            }

            // default: print value
            echo "<td>" . htmlspecialchars($plain, ENT_QUOTES) . "</td>";
        }

        echo "</tr>";
    }
}
