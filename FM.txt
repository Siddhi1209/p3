inputfile="gateway_${BANCS_DQPTYPE}.txt"
GENERATE_FILE(){
        if [ ${BANCS_DQPTYPE} = ${MASTER_DQPTYPE} ]
        then
                echo "${1},${2}" >>$npdata/${inputfile}
        else
                echo "${2}" >>$npdata/${inputfile}
        fi
}

DB_QUERY(){
        export queryResult=`sqlplus -s $ORA_LOGIN/$ORA_PASSWD << EOF
        set feedback off
        set head off
        set pages 0
        $@;
        commit;
        exit;
        EOF`
}

main(){
        >$npdata/${inputfile}
        ##########################################--B24 GATEWAY--#####################
        dt=`cut -c 9-16 $ddata/file/MFLAGS`
        gdate=`date|cut -c5-10`
        $npscripts/UTILITIES/check_job.sh B24  #Does nothing but check $npcard/SERVICE_CHECK.card For Y variable  for gateway provided output 0 or 1[ideally 0]
        if [ $? -eq 0 ]
        then
                        #NORMAL GATEWAY
                        B24=`ps -fufnsonli|grep B24GWBL|grep -v -e grep -e print|wc -l`
                #       B24RE=`grep B24REP /home/fnsonli/.profile | awk -F '=' '{print $2}'`
                        B24RE=`grep B24REP /home/fnsonli/.profile |grep -v '#'|awk -F  '=' '{print $2}'`
        #B24RE=39
                        #ENCRYPTED GATEWAY FROM GTIN TABLE
                        B24enc=`ps -fufnsonli|grep B24GWBLENC|grep -v -e grep -e print|wc -l`
                        DB_QUERY "select count(1) from gtin@master_3_link where dqp_type='${BANCS_DQPTYPE}' and gateway='b24gw' and enc_flag='Y'"
                        gtin_b24enc_count=`echo $queryResult`

                        cd $csysout
                        if [ $B24 -eq $B24RE ]
                        then
                                log_time=`ls -lrt b24.??.out.txt_? | awk '{print $8}' | sort -n | uniq | head -1`
                                curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                diff=`$npscripts/UTILITIES/getTimeDiff.pl $log_time $curr_T`
                                #rep_err_time=`grep "not enabled for" b24.??.out.txt | grep -v FN1Q | awk -F ':' '{print $2":"$3}' | sort -n | uniq | tail -1`
                                #curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                #diff_err_time=`$npscripts/UTILITIES/getTimeDiff.pl $rep_err_time $curr_T`
                                #if [ ${diff_err_time} -le 900 ]
                                #then
                                #       GENERATE_FILE "B24 Gateway" "UTP TXN"
                                #else
                                        if [ $diff -gt 300 ]
                                        then
                                                        GENERATE_FILE "B24 Gateway" "NOT UPDATING"
                                        else
                                                if [ $B24enc -eq $gtin_b24enc_count ]
                                                then
                                                        GENERATE_FILE "B24 Gateway" "RUNNING"
                                                else
                                                        GENERATE_FILE "B24 Gateway" "NOT ENCRYPTED"
                                                fi
                                        fi
                                #fi
                        else
                                GENERATE_FILE "B24 Gateway" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "B24 Gateway" "NA"
        fi
        ##########################################--ATM GATEWAY--######################

        $npscripts/UTILITIES/check_job.sh ATM
        if [ $? -eq 0 ]
        then
                        #NORMAL GATEWAY
                        ATM=`ps -fufnsonli|grep ATMGWBL|grep -v -e grep -e print|wc -l`
                        ATMRE=`cat $card/atmrep_c.card | awk '{print $1}'`

                        #ENCRYPTED GATEWAY FROM GTIN TABLE
                        ATMenc=`ps -fufnsonli|grep ATMGWBLENC|grep -v -e grep -e print|wc -l`
                        DB_QUERY "select count(1) from gtin where dqp_type='${BANCS_DQPTYPE}' and gateway='atm' and enc_flag='Y'"
                        gtin_atmenc_count=`echo $queryResult`

                        cd $csysout
                        if [ $ATM -eq $ATMRE ]
                        then
                                file_T=`ls -lrt atm.??.out.txt_?? | tail -${ATM} | awk '{print $8}' | sort -n | uniq | head -1`
                                curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                diff=`$npscripts/UTILITIES/getTimeDiff.pl $file_T $curr_T`
                                #rep_err_time=`grep "not enabled for" atm.??.out.txt_?? | grep -v FN1Q | awk -F ':' '{print $2":"$3}' | sort -n | uniq | tail -1`
                                #curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                #diff_err_time=`$npscripts/UTILITIES/getTimeDiff.pl $rep_err_time $curr_T`
                                #if [ ${diff_err_time} -le 900 ]
                                #then
                                #       GENERATE_FILE "ATM Gateway" "UTP TXN"
                                #else
                                        if [ $diff -gt 300 ]
                                        then
                                                GENERATE_FILE "ATM Gateway" "NOT UPDATING"
                                        else
                                                if [ $ATMenc -eq $gtin_atmenc_count ]
                                                then
                                                        GENERATE_FILE "ATM Gateway" "RUNNING"
                                                else
                                                        GENERATE_FILE "ATM Gateway" "NOT ENCRYPTED"
                                                fi
                                        fi
                                #fi
                        else
                                        GENERATE_FILE "ATM Gateway" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "ATM Gateway" "NA"
        fi


        ##########################################--INB GATEWAY--######################

        $npscripts/UTILITIES/check_job.sh INB
        if [ $? -eq 0 ]
        then
                        #NORMAL GATEWAY
                        INB=`ps -fufnsonli|grep INBGWBL|grep -v grep|wc -l`
                        INB1=`ps -fufnsonlid|grep inb0000|grep -v grep|wc -l`
                        INB2=`ps -fufnsonlid|grep ioclenq|grep -v grep|wc -l`
                        INB3=`ps -fufnsonlid|grep pushenq|grep -v grep|wc -l`
                        INBRE=`cat $card/inbrep.card`

                        #ENCRYPTED GATEWAY FROM GTIN TABLE
                        INBenc=`ps -fufnsonli|grep INBGWBLENC|grep -v -e grep -e print|wc -l`
                        DB_QUERY "select count(1) from gtin where dqp_type='${BANCS_DQPTYPE}' and gateway='inb' and enc_flag='Y'"
                        gtin_inbenc_count=`echo $queryResult`


                        cd $csysout
                        if [ ${INB} -eq ${INBRE} ] && [ ${INB1} -ge 1 ] && [ ${INB2} -ge 1 ] && [ ${INB3} -ge 1 ]
                        then
                                file_T=`ls -lrt inb.??.out.txt_?? | tail -${INB} | awk '{print $8}' | sort -n | uniq | tail -1`
                                curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                diff=`$npscripts/UTILITIES/getTimeDiff.pl $file_T $curr_T`
                                #rep_err_time=`grep "not enabled for" inb.??.out.txt_?? | grep -v FN1Q | awk -F ':' '{print $2":"$3}' | sort -n | uniq | tail -1`
                                #curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                #diff_err_time=`$npscripts/UTILITIES/getTimeDiff.pl $rep_err_time $curr_T`
                                #if [ ${diff_err_time} -le 900 ]
                                #then
                                #       GENERATE_FILE "INB Gateway" "UTP TXN"
                                #else
                                        if [ $diff -gt 300 ]
                                        then
                                                GENERATE_FILE "INB Gateway" "NOT UPDATING"
                                        else
                                                if [ $INBenc -eq $gtin_inbenc_count ]
                                                then
                                                        GENERATE_FILE "INB Gateway" "RUNNING"
                                                else
                                                        GENERATE_FILE "INB Gateway" "NOT ENCRYPTED"
                                                fi
                                        fi
                                #fi
                        else
                                GENERATE_FILE "INB Gateway" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "INB Gateway" "NA"
        fi
        ################################---MR GATEWAY------######################################
        $npscripts/UTILITIES/check_job.sh MR
        if [ $? -eq 0 ]
        then
                        #NORMAL GATEWAY
                        MR=`ps -fufnsonli|grep MRGWBL|grep -v -e grep -e print|wc -l`
                        MRRE=`cat $card/mrrep.card`
                        logpath="/fns/i/r/sysout"
                        hostname=`hostname`
                        filelist=`ls -lrt $logpath/mr*out*|awk '{print $9}' `
                        faultylinetot=0
                        for i in $filelist
                        do
                                faultylines=`tail -1000 $i| grep -i "Maximum limit for Active connections reached"`
                                faultyline=`echo $faultylines| wc -l`
                                if [ ! -z "$faultylines" ]
                                then
                                        if [ ${faultyline} -ge 1 ]
                                        then
                                                faultylinetot=`expr $faultylinetot + $faultyline`
                                        fi
                                fi
                        done

                        #ENCRYPTED GATEWAY FROM GTIN TABLE
                        MRenc=`ps -fufnsonli|grep MRGWBLENC|grep -v -e grep -e print|wc -l`
                        DB_QUERY "select count(1) from gtin@master_3_link where dqp_type='${BANCS_DQPTYPE}' and gateway='mr' and enc_flag='Y'"
                        gtin_mrenc_count=`echo $queryResult`

                        if [ $MR -ge $MRRE ]
                        then
                                        cd $csysout
                                        #rep_err_time=`grep "not enabled for" mr.??.out.txt_?? | grep -v FN1Q | awk -F ':' '{print $2":"$3}' | sort -n | uniq | tail -1`
                                        #curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                        #diff_err_time=`$npscripts/UTILITIES/getTimeDiff.pl $rep_err_time $curr_T`
                                        #if [ ${diff_err_time} -le 900 ]
                                        #then
                                        #       GENERATE_FILE "MR Gateway" "UTP TXN"
                                        #elif [  $faultylinetot -ge 10 ]
                                        if [  $faultylinetot -ge 10 ]
                                        then
                                                        GENERATE_FILE "MR Gateway" "MAXTCP"
                                        else
                                                curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                                file_T=`ls -lrt mr.??.out.txt_?? | tail -${MR} | awk '{print $8}' | sort -n | uniq | grep -v "${curr_T}" | head -1`
                                                if [ $? -ne 0 ]
                                                then
                                                        curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                                        diff=`$npscripts/UTILITIES/getTimeDiff.pl $file_T $curr_T`
                                                        if [ $diff -gt 300 ]
                                                        then
                                                                GENERATE_FILE "MR Gateway" "NOT UPDATING"
                                                        else
                                                           if [ $MRenc -eq $gtin_mrenc_count ]
                                                                then
                                                                        GENERATE_FILE "MR Gateway" "RUNNING"
                                                                else
                                                                        GENERATE_FILE "MR Gateway" "NOT ENCRYPTED"
                                                                fi
                                                        fi
                                                else
                                                        if [ $MRenc -eq $gtin_mrenc_count ]
                                                        then
                                                                GENERATE_FILE "MR Gateway" "RUNNING"
                                                        else
                                                                GENERATE_FILE "MR Gateway" "NOT ENCRYPTED"
                                                        fi
                                                fi
                                        fi
                        else
                                        GENERATE_FILE "MR Gateway" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "MR Gateway" "NA"
        fi
        ##########################################--TF GATEWAY--######################
        $npscripts/UTILITIES/check_job.sh TF
        if [ $? -eq 0 ]
        then
                        DB_QUERY "select to_char(sysdate,'DAY') from dual"
                        curr_day=`echo $queryResult`
                        if [ ${curr_day} = "SUNDAY" ]
                        then
                                        GENERATE_FILE "TF Gateway" "SUNDAY"
                        else
                                        cd $csysout
                                        tf_cnt=`ps -fufnsonli|grep TFTCPSV|grep -v grep|wc -l`
                                        oracle_error=`grep "ORA-" TFTCPSV.1.out|wc -l`
                                        file_T=`ll -rtl TFTCPSV.1.out|awk '{print $8}'`
                                        curr_T=`date |awk {'print $4'} |cut -c 1-5`
                                        diff=`$npscripts/UTILITIES/getTimeDiff.pl $file_T $curr_T`
                                        if [ ${oracle_error} -gt 0 ] || [ ${tf_cnt} -lt 1 ]
                                        then
                                                        GENERATE_FILE "TF Gateway" "NOT RUNNING"
                                        else
                                                        if [ ${diff} -gt 300 ]
                                                        then
                                                                        GENERATE_FILE "TF Gateway" "NOT UPDATING"
                                                        else
                                                                        GENERATE_FILE "TF Gateway" "RUNNING"
                                                        fi
                                        fi
                        fi
        else
                        GENERATE_FILE "TF Gateway" "NA"
        fi
        ############################-Trickle Feed--##############################
        $npscripts/UTILITIES/check_job.sh TRICKLE_FEED
        if [ $? -eq 0 ]
        then
                        curr_date=`cut -c 15-16 $ddata/file/MFLAGS``cut -c 13-14 $ddata/file/MFLAGS``cut -c 9-12 $ddata/file/MFLAGS`
                        curr_count=`tail -500 $sysout/Tf*${curr_date}.out | grep "ABORT" |wc -l`

                        tfdr=`ps -fufnsonlid|grep tfdrtrig|grep -v grep|wc -l`
                        tfm=`ps -fufnsonlid|grep tfmfilesplit|grep -v grep|wc -l`
                        nft=`ps -fufnsonlid|grep nftfbu|grep -v grep|wc -l`
                        v5588=1
                        v0002=1
                        $npscripts/UTILITIES/check_job.sh cfpd5588
                        if [ $? -eq 0 ]
                        then
                                        v5588=`ps -fufnsonlid|grep cfpd5588 | grep -v grep | wc -l`
                        fi
                        $npscripts/UTILITIES/check_job.sh cfpd0002
                        if [ $? -eq 0 ]
                        then
                                        v0002=`ps -fufnsonlid|grep cfpd0002 | grep -v grep | wc -l`
                        fi

                        cd $dsysout
                        curr_T=`date |awk {'print $4'} |cut -c 1-5`
                        file_T1=`ll -rtl TFTRIGProc.out|awk '{print $8}'`
                        file_T2=`ll -rtl nftfbu.log|awk '{print $8}'`

                        diff1=`$npscripts/UTILITIES/getTimeDiff.pl $file_T1 $curr_T`
                        diff2=`$npscripts/UTILITIES/getTimeDiff.pl $file_T2 $curr_T`

                        if [ $tfdr -ge 1 ] && [ $tfm -ge 1 ] && [ $nft -ge 1 ] && [ $v5588 -ge 1 ] && [ $v0002 -ge 1 ]
                        then
                                        if [ ${diff1} -le 600 ] && [ ${diff2} -le 600 ]
                                        then
                                                        if [ ${curr_count} -ge 1 ]
                                                        then
                                                                        GENERATE_FILE "Trickle Feed" "ABORT"
                                                        else

                                                                        GENERATE_FILE "Trickle Feed" "RUNNING"
                                                        fi
                                        elif [ ${diff1} -le 600 ] && [ ${diff2} -gt 600 ]
                                        then
                                                        GENERATE_FILE "Trickle Feed" "OLD ARCH NOT UPDATING"

                                        elif [ ${diff1} -gt 600 ] && [ ${diff2} -le 600 ]
                                        then
                                                        GENERATE_FILE "Trickle Feed" "NEW ARCH NOT UPDATING"
                                        else
                                                        GENERATE_FILE "Trickle Feed" "NEW AND OLD ARCH NOT UPDATING"
                                        fi
                        else
                                        GENERATE_FILE "Trickle Feed" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "Trickle Feed" "NA"
        fi
        #####################################---------------RTGS--------------########################
        $npscripts/UTILITIES/check_job.sh RTGS
        if [ $? -eq 0 ]
        then
                        rtgs_job=`cat $npcard/RTGS.card |xargs|sed 's/ /|/g'`
                        rtgs_job_run_count=`ps -fufnsonlid |grep -E "${rtgs_job}" |awk {'print $NF'}|sort|uniq|wc -l`
                        rtgs_job_card_count=`cat $npcard/RTGS.card|wc -l`
                        cd $sysout
                        file_T=`ll -rtl rtgsngproctime_??.txt|grep "${gdate}" |tail -1|awk '{print $8}'`
                        curr_T=`date |awk {'print $4'}|cut -c 1-5`

                        diff=`$npscripts/UTILITIES/getTimeDiff.pl $file_T $curr_T`

                        if [ ${rtgs_job_run_count} -ge ${rtgs_job_card_count} ]
                        then
                                        if [ ${diff} -gt 120 ]
                                        then
                                                        GENERATE_FILE "RTGS" "NOT UPDATING"
                                        else
                                                        GENERATE_FILE "RTGS" "RUNNING"
                                        fi
                        else
                                        GENERATE_FILE "RTGS" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "RTGS" "NA"
        fi

        ##############################################-------NEFT-----------###########################
        $npscripts/UTILITIES/check_job.sh NEFT
        if [ $? -eq 0 ]
        then
                        neft_job=`cat $npcard/NEFT.card |xargs|sed 's/ /|/g'`
                        neft_job_run_count=`ps -fufnsonlid |grep -E "${neft_job}" |wc -l`
                        neft_job_card_count=`cat $npcard/NEFT.card|wc -l`
                        cd $sysout
                        file_T=`ll -rtl neftstream.out??|grep "${gdate}" |tail -1|awk '{print $8}'`
                        curr_T=`date |awk {'print $4'}|cut -c 1-5`

                        diff=`$npscripts/UTILITIES/getTimeDiff.pl $file_T $curr_T`

                        if [ ${neft_job_run_count} -ge ${neft_job_card_count} ]
                        then
                                        if [ ${diff} -gt 120 ]
                                        then
                                                        GENERATE_FILE "NEFT" "NOT UPDATING"
                                        else
                                                        GENERATE_FILE "NEFT" "RUNNING"
                                        fi
                        else
                                        GENERATE_FILE "NEFT" "NOT RUNNING"
                        fi
        else
                        GENERATE_FILE "NEFT" "NA"
        fi
        ##########################################----------MQ ERROR----------#########################
        flag_rtgs=0
        flag_neft=0
        flag_imps=0
        for i in `ls -lrt $sysout/rtgsng*| grep -v neft_ack_in.log|grep "${gdate}"|awk {'print $NF'}`
        do
                        tail -100 $i|grep -e "MQCONN ended with reason code" -e "MQPUT ended with reason code" >/dev/null
                        if [ $? -eq 0 ]
                        then
                                        flag_rtgs=1
                                        break
                        fi
        done

        for i in `ls -lrt $sysout/neft*| grep -v neft_ack_in.log | grep -v neftnotif.out |grep "${gdate}"|awk {'print $NF'}`
        do
                        tail -100 $i|grep -e "MQCONN ended with reason code" -e "MQPUT ended with reason code" >/dev/null
                        if [ $? -eq 0 ]
                        then
                                        flag_neft=1
                                        break
                        fi
        done

        for i in `ls -lrt $sysout/imps*|grep "${gdate}"|awk {'print $NF'}`
        do
                        tail -100 $i|grep -e "MQCONN ended with reason code" -e "MQPUT ended with reason code" >/dev/null
                        if [ $? -eq 0 ]
                        then
                                        flag_imps=1
                                        break
                        fi
        done
        echo $flag_imps
        if [ ${flag_rtgs} -eq 0  -a  ${flag_neft} -eq 0  -a ${flag_imps} -eq 0 ]
        then
                        GENERATE_FILE "MQ SERVER" "RUNNING"
        elif [ ${flag_rtgs} -eq 1  -a ${flag_neft} -eq 0 -a ${flag_imps} -eq 0 ]
        then
                        GENERATE_FILE "MQ SERVER" "ERROR IN RTGS"
        elif [ ${flag_rtgs} -eq 0 -a ${flag_neft} -eq 1 -a ${flag_imps} -eq 0 ]
        then
                        GENERATE_FILE "MQ SERVER" "ERROR IN NEFT"
        elif [ ${flag_rtgs} -eq 0 -a ${flag_neft} -eq 0 -a ${flag_imps} -eq 1 ]
        then
                        GENERATE_FILE "MQ SERVER" "ERROR IN IMPS"
        else
                        GENERATE_FILE "MQ SERVER" "ERROR IN RTGS-NEFT-IMPS"
        fi
        #######################################-------CHECKRC-------###############################
        checkrc_cnt=`ps -ef|grep fnsonli|grep checkrc.sh|grep -v -e grep -e checklist| grep -v "checkrc.sh 0" |wc -l`
        if [ $checkrc_cnt -gt 0 ]
        then
                        GENERATE_FILE "Check RC" "RC RUNNING"
        else
                        GENERATE_FILE "Check RC" "NO CHECK RC"
        fi

        ##########################################-SYSTEM UTILISATION------###################################
        uti=`sar -u 1 1|tail -1|awk '{print $5}'`
        if [ -z "$uti" ]
        then
        uti=-
        fi

        GENERATE_FILE "System Idle" "${uti}"
        ################################################-LAST UPDATE-###################################
        update_T=`date|awk '{print $4}'|cut -c 1-5`
        GENERATE_FILE "LAST UPDATE" "${update_T}"
}
main
$HOME/pace/ftc.sh $npdata/${inputfile} /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/${inputfile}.${dt}
$HOME/pace/ftc.sh $spool/CBS_ONLINE.txt /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/CBS_ONLINE.txt.${dt}
