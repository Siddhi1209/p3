DB_QUERY() {
          queryResult=`sqlplus -s $ORA_LOGIN/$ORA_PASSWD << EOF
          set feedback off
          set head off
          set pages 0
          $@;
          exit;
EOF`
}
IFBU_CHECK ( )
{
                >$HOME/pace/tf_upld_type.txt
                >$HOME/pace/tf_input_aging.txt
                cat $HOME/pace/tf_pend_temp.txt|awk '{print $NF}'|awk -F "/" '{print $NF}'|cut -c 1-3|sort|uniq >>$HOME/pace/tf_upld_type.txt
                cat $HOME/pace/tf_upld_type.txt
                for i in `cat $HOME/pace/tf_upld_type.txt`
                        do
                                grep $i $card/TFNOVAL.card
                                if [ $? -eq 0 ];then
                                        cat $HOME/pace/tf_pend_temp.txt|awk '{print $NF}'|grep $i >>$HOME/pace/tf_input_aging.txt
                                else
                                        for j in `grep $i $HOME/pace/tf_pend_temp.txt|awk '{print $NF}'`
                                        do
                                                f_name=`echo $j|awk -F "/" '{print $NF}'`
                                                DB_QUERY "select STATUS from ifbu where FILE_NAME='${f_name}' and PROCESSING_DATE='${bdt}'"
                                                if [ "${queryResult}X" = "SX" ];then
                                                        echo $j >>$HOME/pace/tf_input_aging.txt
                                                fi
                                        done
                                fi
                        done

        $HOME/pace/tricklefeed_pen_data.sh
}

MERGING_DATA ( )
{
>$HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt
for i in `cat $HOME/pace/tf_master_sort.txt | awk -F "," '{print $1}'`
 do
        a=0
        b=0
        grep $i $HOME/pace/tf_proc_file.txt
         if [ $? -eq 0 ];then
                if [ $proc_check -eq 1 ];then
                       a=`grep $i $HOME/pace/tf_proc_file.txt|awk -F "," '{print $2}'` 2>/dev/null
                else
                       a=`grep $i $HOME/pace/tf_proc_file.txt|awk '{print $1}'` 2>/dev/null
                fi

        fi
        grep $i $HOME/pace/tf_pend_file.txt
         if [ $? -eq 0 ];then
                if [ $pend_check -eq 1 ];then
                        b=`grep $i $HOME/pace/tf_pend_file.txt|awk -F "," '{print $3}'` 2>/dev/null
                else
                        b=`grep $i $HOME/pace/tf_pend_file.txt|awk '{print $1}'` 2>/dev/null
                fi
        fi

 if [ $a -ne 0 ] && [ $b -ne 0 ];then
        echo $i,$a,$b >>$HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt
        elif [ $a -ne 0 ] && [ $b -eq 0 ];then
        echo $i,$a,0 >>$HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt
        elif [ $a -eq 0 ] && [ $b -ne 0 ];then
        echo $i,0,$b >>$HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt
else
        echo $i,0,0 >>$HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt
 fi
a=0
b=0
done
}

while :
do

DB_QUERY " select substr(SYSC_VARIABLE,11,1) from sysc where REGION_NO='i' and SYSTEM_NO='00'"
region=`echo $queryResult`
if [ $region = "N" ];then
        echo `date` " Region Mode is Night going into sleep of 1 hr" >>$HOME/dashboard/LOGS/trickleFeed_fin_mas.log
        sleep 3600
else

>$HOME/pace/tf_proc_file.txt
>$HOME/pace/tf_pend_file.txt
>$HOME/pace/tf_pend_temp1.txt
>$HOME/pace/tf_input_aging.txt
>$HOME/pace/tf_pend_temp.txt

export dd=`cat /fns/id/r/data/file/MFLAGS|cut -c 15-16`
export mm=`cat /fns/id/r/data/file/MFLAGS|cut -c 13-14`
export yy=`cat /fns/id/r/data/file/MFLAGS|cut -c 9-12`
export dt1=`echo ${dd}${mm}${yy}`
export dat=`echo $yy$mm$dd`

DB_QUERY "SELECT TO_CHAR(TO_DATE($dt1,'DDMMYYYY'),'J')-2415020 FROM dual"
export bdt=`echo $queryResult|awk '{print $1}'`
cd $spool/Interfaces/BATCH-UPLOADS/BATCH-UPLOADS-ARCHIVE
ls -lrt ???_?????_????????_??????_${dt1}* 2>/dev/null|awk '{print $NF}'|cut -c 1-3|sort|uniq -c >>$HOME/pace/tf_proc_file.txt
ls -lrt BAC_???_?????_${dt1}_??????_???* 2>/dev/null|awk '{print $NF}'|cut -c 1-3|sort|uniq -c >>$HOME/pace/tf_proc_file.txt
cd $spool/Interfaces/NEFT/NEFT-BULK-UPLOAD-FILES/UPLOAD-ARCHIVE
ls -lrt ???_?????_????????_??????_${dt1}* 2>/dev/null |awk '{print $NF}'|cut -c 1-3|sort|uniq -c >>$HOME/pace/tf_proc_file.txt
cd $spool/Interfaces/RTGS/RTGS-BULK-UPLOAD-FILES/UPLOAD-ARCHIVE
ls -lrt ???_?????_????????_??????_${dt1}* 2>/dev/null|awk '{print $NF}'|cut -c 1-3|sort|uniq -c >>$HOME/pace/tf_proc_file.txt
cd $spool/BULK/BULKARCHIVES
ls -lrt ???_?????_????????_??????_${dt1}*txt 2>/dev/null|awk '{print $NF}'|cut -c 1-3|sort|uniq -c >>$HOME/pace/tf_proc_file.txt
ls -lrt BAC_???_?????_${dt1}_??????_???* 2>/dev/null|awk '{print $NF}'|cut -c 1-3|sort|uniq -c >>$HOME/pace/tf_proc_file.txt

proc_count=`wc -l $HOME/pace/tf_proc_file.txt|awk '{print $1}'`

if [ $proc_count -ne 0 ];then
        export proc_check=0
else
        cp $HOME/pace/tf_master_sort.txt $HOME/pace/tf_proc_file.txt
        export proc_check=1
fi
ls -lrt $spool/Interfaces/BATCH-UPLOADS-TEMP/???_?????_????????_??????_${dt1}*txt 2>/dev/null  >>$HOME/pace/tf_pend_temp.txt
ls -lrt $spool/Interfaces/BATCH-UPLOADS-TEMP/BAC_???_?????_${dt1}_??????_???*txt 2>/dev/null  >>$HOME/pace/tf_pend_temp.txt
ls -lrt $spool/Interfaces/BATCH-UPLOADS-5/???_?????_????????_??????_${dt1}*txt 2>/dev/null >>$HOME/pace/tf_pend_temp.txt
ls -lrt $spool/Interfaces/BATCH-UPLOADS-5/BAC_???_?????_${dt1}_??????_???*txt 2>/dev/null  >>$HOME/pace/tf_pend_temp.txt
ls -lrt $spool/Interfaces/BATCH-UPLOADS/???_?????_????????_??????_${dt1}*txt 2>/dev/null >>$HOME/pace/tf_pend_fileb.txt
ls -lrt $spool/Interfaces/BATCH-UPLOADS/BAC_???_?????_${dt1}_??????_???*txt 2>/dev/null  >>$HOME/pace/tf_pend_temp.txt
ls -lrt $spool/Interfaces/NEFT/NEFT-BULK-UPLOAD-FILES/???_?????_????????_??????_${dt1}*txt 2>/dev/null >>$HOME/pace/tf_pend_temp.txt
ls -lrt $spool/Interfaces/RTGS/RTGS-BULK-UPLOAD-FILES/???_?????_????????_??????_${dt1}*txt 2>/dev/null >>$HOME/pace/tf_pend_temp.txt

bu_p=`cat  $HOME/pace/tf_pend_fileb.txt|awk '{print $NF}'|xargs wc -l| awk '{print $1}'|addup`

if [ ${bu_p} -ne 0 ];then
        for i in `cat $HOME/pace/tf_pend_fileb.txt|awk '{print $NF}'|awk -F "/" '{print $NF}'`
        do
                cd $spool/Interfaces/BATCH-UPLOADS
                upld_type=`echo $i|cut -c 1-3`
                branch_code=`echo $i|cut -c 5-9`
                batch_id=`echo $i|awk -F "_" '{print $NF}'|cut -c 1-3`
                check=`ls -lrt ${upld_type}_${branch_code}_*${dt1}*${batch_id}*|grep -v ".txt"|wc -l `
                if [ $check -ne 2 ];then
                        echo $i >>$HOME/pace/tf_pend_temp1.txt
                fi
        done

        for i in `cat $HOME/pace/tf_pend_temp1.txt`
        do
                grep $i $HOME/pace/tf_pend_fileb.txt
                if [ $? -eq 0 ];then
                grep $i $HOME/pace/tf_pend_fileb.txt >>$HOME/pace/tf_pend_temp.txt
                fi
        done

        rm $HOME/pace/tf_pend_fileb.txt $HOME/pace/tf_pend_temp1.txt
fi
        pend_count=`wc -l $HOME/pace/tf_pend_temp.txt|awk '{print $1}'`

        if [ $pend_count -ne 0 ];then
                export pend_check=0
                IFBU_CHECK
                MERGING_DATA
        else
                cp $HOME/pace/tf_master_sort.txt $HOME/pace/tf_pend_file.txt
                export pend_check=1
                MERGING_DATA
                >$HOME/pace/TRIC_MAS_FIN_DATA.txt_${BANCS_DQPTYPE}
        fi
                cd $HOME/pace
                proc_count=`cat $HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt|awk -F "," '{print $2}'|addup`
                pend_count=`cat $HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt|awk -F "," '{print $3}'|addup`
                echo "TOTAL,${proc_count},${pend_count}" >>$HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt

                ftc.sh $HOME/pace/TRIC_MAS_FIN_DATA.txt_${BANCS_DQPTYPE} /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/TRIC_MAS_FIN_DATA.txt_${BANCS_DQPTYPE}_${dat}
                ftc.sh $HOME/pace/tf_pen_pro_${BANCS_DQPTYPE}.txt /opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/tf_pen_pro_${BANCS_DQPTYPE}.txt_${dat}
sleep 600
fi
done


