
<?php
error_reporting(1);

// Database connection examples (commented out)
/*
$con = mysql_connect("localhost","root","");
$db = mysql_select_db('pso_port',$con);
*/

/*
$con = oci_connect("MONITORP","password","opdb");
if (!$con) {
   $m = oci_error();
   echo "<span class='btn btn-danger'>".$m['message']."</span>";
} else {
   // Connected to Oracle
}
*/

// Server and protocol setup
$protocol = "https://";
$ip = $_SERVER['SERVER_ADDR'];
$hostname = $protocol . $ip;

include("includes/function_apr_2.php");
date_default_timezone_set("Asia/Kolkata");

// Determine current date
$getDDcrr = $_GET['date'] ?? '';
$mldate = trim(@file_get_contents("/opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/MFLAGS_D"));

$crdate = !empty($getDDcrr) ? $getDDcrr : $mldate;

// ======= Corrected $MasterDecider logic =======
$masterFilePath = "/opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/Portal_Main_Bulk_File.txt_$crdate";

$MasterDecider = ''; // default fallback
if (file_exists($masterFilePath) && is_readable($masterFilePath)) {
    $fileLines = file($masterFilePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    if ($fileLines !== false && count($fileLines) > 0) {
        $firstLine = $fileLines[0]; // get first line
        $parts = explode(",", $firstLine);
        $MasterDecider = $parts[0] ?? '';
    }
}

// Decide DB based on MasterDecider
switch ($MasterDecider) {
    case "SUTLEJ":
        $DBdecider = 'PR';
        break;
    case "KRISHNA":
        $DBdecider = 'DR(No Auto Switch)';
        break;
    case "HIMALAYA":
        $DBdecider = 'NR(No Auto Switch)';
        break;
    default:
        $DBdecider = 'PR';
        break;
}

// Read nslookup
$nslookupFile = "/opt/hpws/apache/cgi-bin/trials/bip/data/TESTING/nslookup.txt";
$nslookup = file_exists($nslookupFile) && is_readable($nslookupFile) ? trim(file_get_contents($nslookupFile)) : '';

// ======= Updated encrypt_decrypt function =======
function encrypt_decrypt($action, $string) {
    $output = false;
    $encrypt_method = "AES-256-CBC";
    $secret_key = 'This is my secret key';
    $secret_iv = 'This is my secret iv';

    // hash key & iv
    $key = hash('sha256', $secret_key);
    $iv = substr(hash('sha256', $secret_iv), 0, 16);

    if ($action === 'encrypt') {
        $output = openssl_encrypt($string, $encrypt_method, $key, 0, $iv);
        $output = base64_encode($output);
    } elseif ($action === 'decrypt') {
        $output = openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv);
    }

    return $output;
}
